// <auto-generated />
using EFDemo1.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace EFDemo1.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    [Migration("20181020111832_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("EFDemo1.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CourseCode");

                    b.Property<string>("CourseDetail");

                    b.Property<int>("Credit");

                    b.Property<int?>("LecturerId");

                    b.Property<int>("MaxNumber");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EFDemo1.Model.Enrolment", b =>
                {
                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrolments");
                });

            modelBuilder.Entity("EFDemo1.Model.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Feedback");

                    b.Property<string>("LecturerCode");

                    b.Property<string>("Name");

                    b.Property<double>("Payroll");

                    b.HasKey("Id");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("EFDemo1.Model.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EFDemo1.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreditLimited");

                    b.Property<string>("Name");

                    b.Property<int>("StudentFee");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EFDemo1.Model.Course", b =>
                {
                    b.HasOne("EFDemo1.Model.Lecturer", "Lecturer")
                        .WithOne("Course")
                        .HasForeignKey("EFDemo1.Model.Course", "LecturerId");
                });

            modelBuilder.Entity("EFDemo1.Model.Enrolment", b =>
                {
                    b.HasOne("EFDemo1.Model.Course", "Course")
                        .WithMany("Enrolments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFDemo1.Model.Student", "Student")
                        .WithMany("Enrolments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
